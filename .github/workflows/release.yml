# This is a basic workflow to publish the ISO to the releases section

on:
  push:
    branches: [ master ]
    tags:
      - v* # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ master ]
    tags:
      - v* # Push events to matching v*, i.e. v1.0, v20.15.10

name: release ISO

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Size information
        run: df -h
      - name: Cleaning up docker 
        run: |
          sudo docker system prune --all -f;
          sudo find /var/lib/docker/containers/ -type f -name “*.log” -delete
      - name: Clear up more space
        run: |
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/az
      - name: Check if Git tag exists
        #run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"
        run: | 
          echo "tag_version=$(git tag --points-at HEAD)" >> $GITHUB_ENV
        
      - name: Runs only if Git tag exists
        run: echo "This runs because Git tag points at HEAD ..."
        if: ${{ env.tag_version }} != ''        
      - name: Build project # This would actually build your project, using zip for an example artifact
        if: ${{ env.tag_version }} != '' 
        run: |
          wget -O - https://raw.githubusercontent.com/tracelabs/tlosint-live/dev/build_tracelabsiso_recipe.sh | sudo bash
          zip -s 1500m kali-linux-rolling-live-tracelabs-amd64.zip /opt/live-build-config/images/kali-linux-rolling-live-tracelabs-amd64.iso
          ls -lah kali-linux-rolling-live-tracelabs-amd64.zip
      - name: create-checksum-ISO
        if: ${{ env.tag_version }} != '' 
        run: sha256sum /opt/live-build-config/images/kali-linux-rolling-live-tracelabs-amd64.iso > checksums.txt
      - name: create-checksum-zip1
        if: ${{ env.tag_version }} != '' 
        run: sha256sum kali-linux-rolling-live-tracelabs-amd64.zip >> checksums.txt
      - name: create-checksum-zip2
        if: ${{ env.tag_version }} != '' 
        run: sha256sum kali-linux-rolling-live-tracelabs-amd64.z01 >> checksums.txt             
      - name: Create Release
        if: ${{ env.tag_version }} != '' 
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_version }}
          release_name: Release ${{ env.tag_version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset part I
        if: ${{ env.tag_version }} != '' 
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kali-linux-rolling-live-tracelabs-amd64.z01
          asset_name: TLosint-live-${{ env.tag_version }}.z01
          asset_content_type: application/zip
      - name: Upload Release Asset part II
        if: ${{ env.tag_version }} != '' 
        id: upload-release-asset2 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./kali-linux-rolling-live-tracelabs-amd64.zip
          asset_name: TLosint-live-${{ env.tag_version }}.zip
          asset_content_type: application/zip
      - name: upload-SHA256checksums
        if: ${{ env.tag_version }} != '' 
        id: upload-release-asset-checksums 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./checksums.txt
          asset_name: sha256-checksums_${{ env.tag_version }}.txt
          asset_content_type: text/plain

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
